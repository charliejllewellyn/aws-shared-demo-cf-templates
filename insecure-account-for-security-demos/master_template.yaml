AWSTemplateFormatVersion: "2010-09-09"
  
Description: "This cloudformation stack uses nested templates to deploy a cloud enviroment that can be used to mimic a customers on prem enviroment.  This can then be used to demonstrate how AWS services can integrate with on premise enviroments such as creating an VPN to connect the two or extending an existing Active Directory into AWS."

Parameters:
  ProjectName:
    Description: Name to tag resources with
    Type: String
    Default: fake-insecure-account-details

Mappings:                              
  RegionMap:                           
    eu-central-1:                      
      "64": "ami-9a91b371"             
    eu-west-1:                         
      "64": "ami-0fad7378adf284ce0"    
    eu-west-2:                         
      "64": "ami-0664a710233d7c148"    
    eu-west-3:                         
      "64": "ami-cae150b7"             
    sa-east-1:                         
      "64": "ami-f09dcc9c"             
    us-east-2:                         
      "64": "ami-976152f2"             
    us-east-1:                         
      "64": "ami-467ca739"             
    us-west-1:                         
      "64": "ami-46e1f226"             
    us-west-2:                         
      "64": "ami-e251209a"             
    ap-northeast-1:                    
      "64": "ami-92df37ed"             
    ap-northeast-2:                    
      "64": "ami-efaf0181"             
    ap-northeast-3:                    
      "64": "ami-b4faf4c9"             
    ap-south-1:                        
      "64": "ami-b46f48db"             
    ap-southeast-1:                    
      "64": "ami-de90a5a2"             
    ap-southeast-2:                    
      "64": "ami-60a26a02"             
    ca-central-1:                      
      "64": "ami-338a0a57"             

Resources:
  vpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-eu-west-1.amazonaws.com/aws-shared-demo-cf-templates/vpc/vpc-1.yaml
      Tags:
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Name
          Value: !Ref ProjectName
      Parameters:
        ProjectName: !Ref ProjectName

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead

  securityGroup:                                                                                   
    Type: AWS::EC2::SecurityGroup                                                                  
    Properties:                                                                                    
      GroupDescription: Allow SSH to VPN server                                                    
      VpcId: !GetAtt vpc.Outputs.vpcId                                                                            
      SecurityGroupIngress:                                                                        
      - IpProtocol: tcp                                                                            
        FromPort: '22'                                                                             
        ToPort: '22'                                                                               
        CidrIp: 0.0.0.0/0                                                                          

  ec2Role:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonGuardDutyFullAccess
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: fake-insecure-account-ec2-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                - 'iam:PutRolePolicy'
      Path: "/"
      RoleName: fake-insecure-account-role

  ec2Profile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: "/"
      Roles:
        - !Ref ec2Role
      InstanceProfileName: fake-insecure-account-ec2-profile
                                                                                                   
  insecureHost1:                                                                                          
    Type: "AWS::EC2::Instance"                                                                     
    Properties:                                                                                    
      InstanceType: t2.micro                                                                        
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", 64]                                      
      NetworkInterfaces:                                                                           
        - AssociatePublicIpAddress: "true"                                                         
          DeviceIndex: "0"                                                                         
          GroupSet:                                                                                
            - !Ref securityGroup                                                                   
          SubnetId: !GetAtt vpc.Outputs.subnetBId
      UserData:                                                                                    
        "Fn::Base64":                                                                              
          !Sub 
            - |                                                                                   
              #!/bin/bash        
              echo ${S3Bucket} > ~/bucket.txt
              sleep 5
              mkdir ~/.aws
              echo -e "[default]\nregion = eu-west-2" > ~/.aws/config
              yum install -y jq
              echo '209.85.202.94' > ~/securityThreatList.txt ; aws s3 cp ~/securityThreatList.txt s3://${BUCKET_NAME}/
              aws guardduty create-threat-intel-set --activate --detector-id $(aws guardduty list-detectors |jq .DetectorIds[0] | sed 's/"//g') --format TXT --location https://s3-eu-west-1.amazonaws.com/${BUCKET_NAME}/securityThreatList.txt --name fake-insecure-account-demo
              while true ; do                                                                    
                  curl http://209.85.202.94
                  sleep 5
              done
            - {BUCKET_NAME: !Ref S3Bucket} 
      IamInstanceProfile: !Ref ec2Profile
      Tags:                                                                                        
       - Key: Name                                                                                 
         Value: Insecure-host-1
