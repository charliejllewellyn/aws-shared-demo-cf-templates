---
Description: 'Cisco Cloud Services Router: CSR1000V - Security Technology Package
  for Maximum Performance --AWSMP::dbfcb230-402e-49cc-857f-dacb4db08d34::ee828020-398a-4010-87e1-5f0e336ed1e8--'
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPCIDtolaunchinto
  SubnetPublic:
    Description: Public Subnet
    Type: AWS::EC2::Subnet::Id
  SubnetPrivate:
    Description: Private Subnet
    Type: AWS::EC2::Subnet::Id
  InstanceType:
    Description: TypeofEC2instancetouse
    Type: String
    Default: c4.large
    AllowedValues:
    - t2.medium
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5.9xlarge
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: InstanceswilllaunchwiththisKeyPair
  CidrIp1:
    Description: CIDR for Security Groups source IP
    Type: String
    AllowedPattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/[0-9]{1,2}"
    ConstraintDescription: 'Please specify a valid source IP range. Eg: 0.0.0.0/0'
  CidrIp2:
    Description: CIDR for port 22 for SSH
    Type: String
    AllowedPattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/[0-9]{1,2}"
    ConstraintDescription: 'Please specify a valid source IP range. Eg: 0.0.0.0/0'
Mappings:
  AWSInstanceType2Arch:
    t2.medium:
      Arch: '64'
    c4.large:
      Arch: '64'
    c4.xlarge:
      Arch: '64'
    c4.2xlarge:
      Arch: '64'
    c4.4xlarge:
      Arch: '64'
    c4.8xlarge:
      Arch: '64'
    c5.large:
      Arch: '64'
    c5.xlarge:
      Arch: '64'
    c5.2xlarge:
      Arch: '64'
    c5.4xlarge:
      Arch: '64'
    c5.9xlarge:
      Arch: '64'
  AWSRegionArch2AMI:
    us-east-1:
      '64': ami-232c425c
    us-east-2:
      '64': ami-e7704f82
    us-west-1:
      '64': ami-2faab14f
    us-west-2:
      '64': ami-7e90eb06
    us-gov-west-1:
      '64': ami-b8d041d9
    eu-central-1:
      '64': ami-254d78ce
    ca-central-1:
      '64': ami-8ce665e8
    eu-west-1:
      '64': ami-7b794302
    eu-west-2:
      '64': ami-2104e846
    eu-west-3:
      '64': ami-a541f0d8
    ap-southeast-1:
      '64': ami-d991aea5
    ap-southeast-2:
      '64': ami-3d85575f
    ap-south-1:
      '64': ami-f7bb9498
    ap-northeast-1:
      '64': ami-e168909e
    ap-northeast-2:
      '64': ami-33bc175d
    sa-east-1:
      '64': ami-63e5bb0f
Resources:
  SecurityGroupPublic:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for ENI Public
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: CidrIp2
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp:
          Ref: CidrIp1
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp:
          Ref: CidrIp1
      - IpProtocol: udp
        FromPort: '67'
        ToPort: '67'
        CidrIp:
          Ref: CidrIp1
      - IpProtocol: udp
        FromPort: '123'
        ToPort: '123'
        CidrIp:
          Ref: CidrIp1
      - IpProtocol: udp
        FromPort: '161'
        ToPort: '161'
        CidrIp:
          Ref: CidrIp1
      - IpProtocol: udp
        FromPort: '500'
        ToPort: '500'
        CidrIp:
          Ref: CidrIp1
      - IpProtocol: udp
        FromPort: '4500'
        ToPort: '4500'
        CidrIp:
          Ref: CidrIp1
  ENIPublic:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId:
        Ref: SubnetPublic
      Description: ENIPublic
      GroupSet:
      - Ref: SecurityGroupPublic
      SourceDestCheck: 'false'
  SecurityGroupforENIPrivate:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for ENI Private
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
      - IpProtocol: "-1"
        CidrIp:
          Ref: CidrIp1
  ENIPrivate:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId:
        Ref: SubnetPrivate
      Description: ENIPrivate
      GroupSet:
      - Ref: SecurityGroupforENIPrivate
      SourceDestCheck: 'false'
  TwoInterfaceCSR:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
      - Key: Name
        Value: cisco CSR
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      NetworkInterfaces:
      - NetworkInterfaceId:
          Ref: ENIPublic
        DeviceIndex: '0'
      - NetworkInterfaceId:
          Ref: ENIPrivate
        DeviceIndex: '1'
      ImageId:
        Fn::FindInMap:
        - AWSRegionArch2AMI
        - Ref: AWS::Region
        - Fn::FindInMap:
          - AWSInstanceType2Arch
          - Ref: InstanceType
          - Arch
Outputs:
  URL:
    Description: URL to the Gateway portal
    Value:
      Fn::Join:
      - ''
      - - https://
        - Fn::GetAtt:
          - ENIPublic
          - PrimaryPrivateIpAddress
  csrInterfaceId:
    Description: Id of the CSR 1000v instance
    Value: !Ref ENIPublic
  csrInstanceId:
    Description: Id of the CSR 1000v instance
    Value: !Ref TwoInterfaceCSR

